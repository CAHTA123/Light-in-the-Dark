[gd_scene load_steps=4 format=3 uid="uid://bqhegexofc3wb"]

[ext_resource type="Texture2D" uid="uid://bdgf00ptehw23" path="res://sprites/Islands/01.png" id="1_5n40e"]

[sub_resource type="GDScript" id="GDScript_8gpnr"]
script/source = "extends Area2D


@export var collision_node_path =\"../../shape/StaticBody2D/CollisionPolygon2D\"   # Путь к узлу с коллизией

@onready var collision_node = get_node(collision_node_path)

func _ready():
	set_process_input(true)



func _on_Area2D_body_exited(body):
	if body.has_method(\"get_name\") and body.get_name() == \"Body\":
		collision_node.set_deferred(\"disabled\", false)


func _on_body_entered(body):
	if body.has_method(\"get_name\") and body.get_name() == \"Body\":
		collision_node.set_deferred(\"disabled\", true)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_elv4n"]
size = Vector2(195, 55)

[node name="Islands" type="Node2D"]

[node name="Sprite" type="Node2D" parent="."]
scale = Vector2(2, 2)

[node name="Island1" type="Sprite2D" parent="Sprite"]
position = Vector2(-3.5, 5)
texture = ExtResource("1_5n40e")

[node name="shape" type="Node2D" parent="."]
position = Vector2(42, -102)

[node name="StaticBody2D" type="StaticBody2D" parent="shape"]
position = Vector2(-42, 102)

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="shape/StaticBody2D"]
light_mask = 2
visibility_layer = 2
position = Vector2(-192, -384)
scale = Vector2(4, 4)
build_mode = 1
polygon = PackedVector2Array(-434, -1436, -822, -1345, -1261, -1128, -1578, -811, -1794, -443, -1756, 224, -1350, 834, -886, 1094, -321, 1310, 219, 1297, 777, 1145, 1412, 923, 1838, 351, 1889, -322, 1725, -728, 1281, -1177, 689, -1417, -113, -1456, -304, -1453)

[node name="Node2D" type="Node2D" parent="."]
position = Vector2(1556, 525)

[node name="Area2D" type="Area2D" parent="Node2D"]
script = SubResource("GDScript_8gpnr")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Node2D/Area2D"]
position = Vector2(107.5, 17.5)
shape = SubResource("RectangleShape2D_elv4n")

[connection signal="body_entered" from="Node2D/Area2D" to="Node2D/Area2D" method="_on_body_entered"]
[connection signal="body_exited" from="Node2D/Area2D" to="Node2D/Area2D" method="_on_Area2D_body_exited"]
